#![cfg_attr(not(test), no_std)]
#![cfg_attr(not(test), no_main)]

#[cfg(test)]
extern crate alloc;

#[cfg(not(test))]
ckb_std::entry!(program_entry);
// By default, the following heap configuration is used:
// * 16KB fixed heap
// * 1.2MB(rounded up to be 16-byte aligned) dynamic heap
// * Minimal memory block in dynamic heap is 64 bytes
// For more details, please refer to ckb-std's default_alloc macro
// and the buddy-alloc alloc implementation.
ckb_std::default_alloc!(16384, 1258306, 64);

use k256::schnorr::{signature::Verifier, Signature, VerifyingKey};

pub fn program_entry() -> i8 {
    let msg_bytes = [
        0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x2c, 0x20, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00,
    ];
    let pub_bytes = [
        0x0c, 0xec, 0x02, 0x8e, 0xe0, 0x8d, 0x09, 0xe0, 0x26, 0x72, 0xa6, 0x83, 0x10, 0x81, 0x43,
        0x54, 0xf9, 0xea, 0xbf, 0xff, 0x0d, 0xe6, 0xda, 0xcc, 0x1c, 0xd3, 0xa7, 0x74, 0x49, 0x60,
        0x76, 0xae,
    ];
    let sig_bytes = [
        0xe3, 0xad, 0x8b, 0xcb, 0xe0, 0x47, 0xe2, 0xbb, 0xaa, 0xf8, 0x1b, 0x65, 0x3c, 0x49, 0x54,
        0x55, 0x33, 0xf7, 0x39, 0xc0, 0x35, 0x35, 0x6f, 0x4e, 0x3a, 0x97, 0xcc, 0xcc, 0xb0, 0xb4,
        0xe6, 0x96, 0x49, 0xb7, 0x0c, 0xe7, 0xb4, 0x5a, 0x20, 0x30, 0x8b, 0xab, 0x1c, 0xff, 0x4c,
        0x44, 0x29, 0x55, 0x04, 0x89, 0x4d, 0xe1, 0x46, 0xc1, 0x92, 0x87, 0xb9, 0x17, 0xc7, 0x50,
        0x65, 0x06, 0xff, 0xc9,
    ];
    let verifying_key = VerifyingKey::from_bytes(&pub_bytes).unwrap();
    let sig = Signature::try_from(sig_bytes.as_slice()).unwrap();
    verifying_key.verify(&msg_bytes, &sig).unwrap();
    0
}
