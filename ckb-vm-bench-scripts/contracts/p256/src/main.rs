#![cfg_attr(not(test), no_std)]
#![cfg_attr(not(test), no_main)]

#[cfg(test)]
extern crate alloc;

#[cfg(not(test))]
ckb_std::entry!(program_entry);
// By default, the following heap configuration is used:
// * 16KB fixed heap
// * 1.2MB(rounded up to be 16-byte aligned) dynamic heap
// * Minimal memory block in dynamic heap is 64 bytes
// For more details, please refer to ckb-std's default_alloc macro
// and the buddy-alloc alloc implementation.
ckb_std::default_alloc!(16384, 1258306, 64);

use p256::ecdsa::{signature::Verifier, Signature, VerifyingKey};

pub fn program_entry() -> i8 {
    let msg_bytes = [
        0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x2c, 0x20, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00,
    ];
    let pub_bytes = [
        0x04, 0x1c, 0xcb, 0xe9, 0x1c, 0x07, 0x5f, 0xc7, 0xf4, 0xf0, 0x33, 0xbf, 0xa2, 0x48, 0xdb,
        0x8f, 0xcc, 0xd3, 0x56, 0x5d, 0xe9, 0x4b, 0xbf, 0xb1, 0x2f, 0x3c, 0x59, 0xff, 0x46, 0xc2,
        0x71, 0xbf, 0x83, 0xce, 0x40, 0x14, 0xc6, 0x88, 0x11, 0xf9, 0xa2, 0x1a, 0x1f, 0xdb, 0x2c,
        0x0e, 0x61, 0x13, 0xe0, 0x6d, 0xb7, 0xca, 0x93, 0xb7, 0x40, 0x4e, 0x78, 0xdc, 0x7c, 0xcd,
        0x5c, 0xa8, 0x9a, 0x4c, 0xa9,
    ];
    let sig_bytes = [
        0xec, 0x52, 0x64, 0x07, 0xbf, 0xf8, 0x90, 0xbc, 0x53, 0xfd, 0xef, 0x6c, 0x1d, 0x99, 0x51,
        0xc5, 0xa7, 0x16, 0x1f, 0x77, 0x07, 0xac, 0x4c, 0xf5, 0x26, 0xf7, 0x68, 0x33, 0x1b, 0x02,
        0xc6, 0x83, 0x50, 0xce, 0xdd, 0xff, 0xc1, 0x43, 0xf5, 0x39, 0x75, 0xbc, 0x10, 0x4d, 0x04,
        0xa7, 0x9d, 0x25, 0xca, 0xf1, 0xe5, 0xaf, 0xbb, 0xf5, 0xf7, 0xec, 0x2a, 0xd4, 0xa2, 0x14,
        0xaf, 0x9f, 0xa1, 0xc8,
    ];
    let verifying_key = VerifyingKey::from_sec1_bytes(&pub_bytes).unwrap();
    let sig = Signature::from_slice(&sig_bytes).unwrap();
    verifying_key.verify(&msg_bytes, &sig).unwrap();
    0
}
